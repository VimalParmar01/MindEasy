import pandas as pd
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier

# Load the mental health dataset
file_path = r"C:\Users\Vivobook\OneDrive\Desktop\MindEasy\Cleaned_Mental_Health_Dataset.csv"
mental_health_data = pd.read_csv(file_path)

# Select relevant columns for the recommendation system
data = mental_health_data[['Mood', 'Recommended_Activity']]
data.dropna(inplace=True)  # Remove rows with missing values

# Preprocess Data
X = data['Mood']
y = data['Recommended_Activity']

# Feature Extraction using CountVectorizer
vectorizer = CountVectorizer()
X_vectorized = vectorizer.fit_transform(X)

# Train-Test Split
X_train, X_test, y_train, y_test = train_test_split(X_vectorized, y, test_size=0.2, random_state=42)

# Model Selection and Training
model = RandomForestClassifier(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

# Accuracy Check
accuracy = model.score(X_test, y_test)
print(f"Model Accuracy: {accuracy * 100:.2f}%")

# Function to Get Recommendation based on Mood
def get_recommendation(user_mood):
    user_input = vectorizer.transform([user_mood])
    suggestion = model.predict(user_input)
    return suggestion[0]

# Example Use
user_mood = input("Enter your mood (e.g., happy, sad, anxious, etc.): ")
suggestion = get_recommendation(user_mood.lower())
print(f"Suggested Activity: {suggestion}")
